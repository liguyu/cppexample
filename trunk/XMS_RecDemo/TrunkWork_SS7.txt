void TrunkWork ( TRUNK_STRUCT *pOneTrunk, Acs_Evt_t *pAcsEvt )
{
	DeviceID_t				FreeVoc1DeviceID;
	DeviceID_t				FreeVoc2DeviceID;
	char					FileName[256];
	char                    str[20] = {0};
	DeviceID_t *            pDev = &pAcsEvt->m_DeviceID;
	PSMON_EVENT             SMevt= NULL;
    	static  DJ_U32          m_u32Counter = 0;
	int monitorDspModuleID;
	int monitorFirstE1;
	int monitorSecondE1;

	if ( XMS_EVT_SIGMON == pAcsEvt->m_s32EventType && g_u8IsStartFlag){
		return;
	}

   
	SMevt = (PSMON_EVENT)FetchEventData(pAcsEvt);


	if (g_NumbersOfMonitorGroup == 0)
	{
		AddMsg("g_NumbersOfMonitorGroup == 0");
		return;
	}
	
	for (int i=0; i<g_NumbersOfMonitorGroup; i++)
	{
		if (SMevt->Pcm == g_MonitorGroupInfo[i].m_MonitorCIC)
		{
			monitorDspModuleID = g_MonitorGroupInfo[i].m_MonitorDspModuleID;
			monitorFirstE1 = g_MonitorGroupInfo[i].m_MonitorFirstE1;
			monitorSecondE1 = g_MonitorGroupInfo[i].m_MonitorSecondE1;
			i = g_NumbersOfMonitorGroup;
		}else{
			AddMsg("No correct MonitorCIC");
			return;
			}
	}

	///////////////////////////////////////////////////////////////////
	TRUNK_STRUCT *pOneRecordTrunk1 = &AllDeviceRes[monitorDspModuleID].pTrunk[SMevt->Chn + (monitorFirstE1-1)*32];
	TRUNK_STRUCT *pOneRecordTrunk2 = &AllDeviceRes[monitorDspModuleID].pTrunk[SMevt->Chn + (monitorSecondE1-1)*32];
	if (pOneRecordTrunk1 == NULL || pOneRecordTrunk2 == NULL )
	{
		AddMsg("Record Trunk is not exist");
		return;
	}

 	int iPos = CalDispRow(pOneTrunk->iSeqID); 
	int iPos1 = CalDispRow( pOneRecordTrunk1 ->iSeqID); 
	int iPos2 = CalDispRow( pOneRecordTrunk2 ->iSeqID);
				

	switch(SMevt->EventType)
	{
	case SMON_EVT_Call_Connect:

			
				
				int voc1Chn = 0;
				int voc2Chn = 0;
				voc1Chn = SearchOneFreeVoice ( pOneTrunk,  &FreeVoc1DeviceID );
				if ( voc1Chn >= 0 )
				{
					pOneRecordTrunk1->VocDevID = FreeVoc1DeviceID;
					
					M_OneVoice(FreeVoc1DeviceID).UsedDevID = pOneRecordTrunk1->deviceID; 
					
					DrawMain_VocInfo ( pOneRecordTrunk1 );
					
					My_DualLink ( &FreeVoc1DeviceID, &pOneRecordTrunk1->deviceID ); 
				}else{
					AddMsg("No Free Voc resource");
					return;
				}
				
				// start record
				voc2Chn = SearchOneFreeVoice ( pOneTrunk,  &FreeVoc2DeviceID );
				if (  voc2Chn >= 0 )
				{
					pOneRecordTrunk2->VocDevID = FreeVoc2DeviceID;
					
					M_OneVoice(FreeVoc2DeviceID).UsedDevID = pOneRecordTrunk2->deviceID; 
					
					DrawMain_VocInfo ( pOneRecordTrunk2 );
					
					My_DualLink ( &FreeVoc2DeviceID, &pOneRecordTrunk2->deviceID ); 
					
					//get system time
					CString str;
					CTime tm;					
					tm=CTime::GetCurrentTime();
					str=tm.Format("%Y%m%d%H%M%S");
					

					sprintf ( FileName, "%s\\SS7Rec-%d-%d-%d-%s.pcm", cfg_VocPath,monitorDspModuleID,pOneRecordTrunk1->deviceID.m_s16ChannelID,pOneRecordTrunk2->deviceID.m_s16ChannelID,str);
					RecordFile ( &pOneRecordTrunk2->VocDevID, FileName, 8000L*3600L*24, false ,voc1Chn);		// we record for 24 hours
					
					
					pOneRecordTrunk1->u8IsRecordFlag = TRUE;
					pOneRecordTrunk2->u8IsRecordFlag = TRUE;
					pOneRecordTrunk1->u8RecordCounter = (++pOneRecordTrunk1->u8RecordCounter)%0x10;
					pOneRecordTrunk2->u8RecordCounter = (++pOneRecordTrunk2->u8RecordCounter)%0x10;
				}
				
				sprintf(str,"%d", SMevt->MsgType);
				pdlg->m_ListMain.SetItemText(iPos, 7, str);

				
				pdlg->m_ListMain.SetItemText(iPos1,6, SMevt->Caller_ID);
				pdlg->m_ListMain.SetItemText(iPos1,5, SMevt->Called_ID);
				pdlg->m_ListMain.SetItemText(iPos2,6, SMevt->Caller_ID);
				pdlg->m_ListMain.SetItemText(iPos2,5, SMevt->Called_ID);
				Change_State ( pOneRecordTrunk1, TRK_CONNECT );	
				Change_State ( pOneRecordTrunk2, TRK_CONNECT );	

		break;
	case SMON_EVT_Call_Disconnect:	// Wait OnHook
			
				sprintf(str,"%d", SMevt->MsgType);
				pdlg->m_ListMain.SetItemText(iPos1, 7, str);
				pdlg->m_ListMain.SetItemText(iPos2, 7, str);

				sprintf(str,"%d", SMevt->ReleaseReason);
				pdlg->m_ListMain.SetItemText(iPos1, 9, str);
				pdlg->m_ListMain.SetItemText(iPos2, 9, str);

				//StopRecordFile ( &(pOneRecordTrunk1->VocDevID );
				//StopRecordFile ( &(pOneRecordTrunk1->VocDevID );

				ResetTrunk (pOneRecordTrunk1 , pAcsEvt );
				ResetTrunk (pOneRecordTrunk2 , pAcsEvt );
				
			
		break;
	
}

